clear;

OutputFileName='WTest0.py';


PreambleText=[{'from part import * \n'}; ...
    {'from material import * \n'};...
    {'from section import * \n'};...
    {'from assembly import * \n'};...
    {'from step import * \n'};...
    {'from interaction import * \n'};...
    {'from load import * \n'};...
    {'from mesh import * \n'};...
    {'from job import * \n'};...
    {'from sketch import * \n'};...
    {'from visualization import * \n'};...
    {'from connectorBehavior import * \n'};...
    {' \n'}; ...
    {'# OpenSketch \n'};...
    ];

SketchText=['mdb.models[' char(39) 'Model-1' char(39) ...
    '].ConstrainedSketch(name=' char(39) '__profile__' char(39) ...
    ', sheetSize=( %8.4e )) \n' ...
    ]; % [SheetSize]

PlaneText=['mdb.models[' char(39) 'Model-1' char(39) '].sketches[' ...
    char(39) '__profile__' char(39) ...
    '].rectangle(point1=(%8.4e,%8.4e), point2=(%8.4e,%8.4e)) \n' ...
    ]; % [MinX,MinY,MaxX,MaxY]
PartText=['mdb.models[' char(39) 'Model-1' char(39) ...
    '].Part(dimensionality=THREE_D, name=' char(39) ...
    'Part-1' char(39) ', type= DEFORMABLE_BODY) \n'];
SetPartText=['vP=mdb.models[' char(39) 'Model-1' char(39) ...
    '].parts[' char(39) 'Part-1' char(39) '] \n'];
ExtrudeText=['vP.BaseSolidExtrude(depth=%8.4e, sketch= mdb.models[' ...
    char(39) 'Model-1' char(39) ...
    '].sketches[' char(39) '__profile__' char(39) ']) \n']; %[Depth]
DelSketchText=['del mdb.models[' char(39) 'Model-1' ...
    char(39) '].sketches[' char(39) '__profile__' char(39) '] \n'];

fileID = fopen(OutputFileName,'w+');

for n1=1:length(PreambleText)
    %fprintf(fileID,FMT,g);
    fprintf(fileID,PreambleText{n1});
end

fprintf(fileID,SketchText,1000); % [SheetSize]
fprintf(fileID,PlaneText,0,0,800,800);  % [MinX,MinY,MaxX,MaxY]
fprintf(fileID,PartText);
fprintf(fileID,SetPartText);
fprintf(fileID,ExtrudeText,50); %[Depth]
fprintf(fileID,DelSketchText);
fprintf(fileID,' \n');
fclose(fileID);

%--------------------


% vP.DatumPointByCoordinate(coords=( 0, 1, 0 ))
% vP.DatumPointByCoordinate(coords=( 0, 2, 0 ))
% vP.DatumPointByCoordinate(coords=( 0, 1, 1 ))
% vP.DatumPlaneByThreePoints( point1=vP.datums[2], point2=vP.datums[3], point3=vP.datums[4])
% vP.DatumAxisByTwoPoint(point1=vP.datums[2], point2=vP.datums[3])
% mdb.models['Model-1'].ConstrainedSketch(gridSpacing=0.12, name='__profile__',sheetSize=5.02,
%     transform=vP.MakeSketchTransform(sketchPlane=vP.datums[5], sketchPlaneSide=SIDE1,
%     sketchUpEdge=vP.datums[6],sketchOrientation=RIGHT, origin=(0,0,0)))
% mdb.models['Model-1'].sketches['__profile__'].sketchOptions.setValues(sheetSize=6000)
% vP.projectReferencesOntoSketch(filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__profile__'])
% mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(-6000, -6000), point2=(6000, 6000))
